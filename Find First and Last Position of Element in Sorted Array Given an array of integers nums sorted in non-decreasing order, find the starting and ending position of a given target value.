Find First and Last Position of Element in Sorted Array Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.

If target is not found in the array, return [-1, -1].

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]
Example 3:

Input: nums = [], target = 0
Output: [-1,-1]
 

Constraints:

0 <= nums.length <= 105
-109 <= nums[i] <= 109
nums is a non-decreasing array.
-109 <= target <= 109

Time Complexity -o(n)
Space Complexity-o(1)
Java Solution

class Solution {
    public int[] searchRange(int[] nums, int target) {
        int ans[]=new int[2];
        ans[0]=-1;
        ans[1]=-1;
        if(nums.length==0)
            return ans;
        
        int mid=nums.length-1;
        for(int i=0;i<nums.length;i++){
             if(nums[i]==target) 
          {
              ans[0]=i;
              mid=i;
              break;
          }
        }
        
for(int i=nums.length-1;i>=mid;i--){
          if(nums[i]==target) 
          {
              ans[1]=i;
              break;
          }
        }

        
        return ans;
    }
}


 
